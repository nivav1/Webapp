name: Test and publish the application

on:
  push:
    tags: [ 'v*' ]
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  pytest:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r /backend/requirements.txt
    - name: Lint with flake8
      run: |
        cd backend
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        cd backend
        pytest

  
  nodetest:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x, 23.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install dependencies
      working-directory: frontend
      run: npm ci
    - name: Build project
      working-directory: frontend
      run: npm run build --if-present
    - name: Run tests
      working-directory: frontend
      run: npm test

  
  build-and-push:

    runs-on: ubuntu-latest
  
    needs:
      - pytest
      - nodetest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        run: |
          docker build -t nivav123/backend:${{ github.ref_name }} backend/
          docker push nivav123/backend:${{ github.ref_name }}

      - name: Build and push frontend image
        run: |
          docker build -t nivav123/frontend:${{ github.ref_name }} frontend/
          docker push nivav123/frontend:${{ github.ref_name }}